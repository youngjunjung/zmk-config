/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        f1 {
            bindings = <&kp F1>;
            key-positions = <1 13>;
            require-prior-idle-ms = <100>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <2 14>;
            require-prior-idle-ms = <100>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <3 15>;
            require-prior-idle-ms = <100>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <4 16>;
            require-prior-idle-ms = <100>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <17 5>;
            require-prior-idle-ms = <100>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <18 6>;
            require-prior-idle-ms = <100>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <7 19>;
            require-prior-idle-ms = <100>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <20 8>;
            require-prior-idle-ms = <100>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <9 21>;
            require-prior-idle-ms = <100>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <10 22>;
            require-prior-idle-ms = <100>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <1 25>;
            require-prior-idle-ms = <100>;
        };

        f12 {
            bindings = <&kp F12>;
            key-positions = <26 2>;
            require-prior-idle-ms = <100>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
            require-prior-idle-ms = <100>;
        };

        left {
            bindings = <&kp LEFT>;
            key-positions = <19 20>;
            require-prior-idle-ms = <100>;
        };

        up {
            bindings = <&kp UP>;
            key-positions = <7 8>;
            require-prior-idle-ms = <100>;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <31 32>;
            require-prior-idle-ms = <100>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <21 22>;
            require-prior-idle-ms = <100>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <19 18>;
            require-prior-idle-ms = <100>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <22 23>;
            require-prior-idle-ms = <100>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <10 11>;
            require-prior-idle-ms = <100>;
        };
    };

    behaviors {
        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "HR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <130>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q           &kp W           &kp E             &kp R        &kp T        &kp Y    &kp U        &kp I              &kp O           &kp P                   &kp BSPC
&kp LCTRL  &hr LEFT_GUI A  &hr LEFT_ALT S  &hr LEFT_SHIFT D  &hr LCTRL F  &kp G        &kp H    &hr RCTRL J  &hr RIGHT_SHIFT K  &hr LEFT_ALT L  &hr LEFT_GUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C             &kp V        &kp B        &kp N    &kp M        &kp COMMA          &kp DOT         &kp FSLH                &kp ESC
                                           &kp LGUI          &mo 1        &kp SPACE    &kp RET  &mo 2        &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT | F11 | F12  |
            // | SHFT | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  |  F8 | F9  | F10 | PRSC |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0   &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp F11  &kp F12
&kp LSHFT   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8    &kp F9     &kp F10  &kp PRINTSCREEN
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
